#!/usr/bin/env bash

NOTE_DIR="$HOME/notes"
NOTE_TEMP_PATH="/tmp/note.list"

[[ -d $NOTE_DIR ]] || mkdir -p $NOTE_DIR

usage() {
  echo
  echo "usage: note <command> [args]"
  echo
  echo "commands:"
  printf "\t%-10s %s\n" "edit" "Edit recent note or those located by \"find\""
  printf "\t%-10s %s\n" "find" "Find notes"
  printf "\t%-10s %s\n" "list" "List notes"
  printf "\t%-10s %s\n" "new" "Create a new note"
  printf "\t%-10s %s\n" "open" "Open notes dir in \$EDITOR"
  printf "\n\n"
  printf "Use \"note help <command>\" for more information about a command."
  printf "\n\n"
}

# log_err sends an error message to stderr
log_err() {
  echo "[error]: $@" >&2
}

exit_arg_err() {
  usage
  exit 1
}

new() {
  local dirpath
  local filename
  local filepath

  if [[ -z "$1" ]] && [[ -d "$NOTE_DIR/misc" ]]; then
    dirpath="$NOTE_DIR/misc"
  elif [[ -z "$1" ]]; then
    dirpath="$NOTE_DIR"
  else
    dirpath="$NOTE_DIR/$1"
    [[ -d "$dirpath" ]] || mkdir -p "$dirpath"
  fi

  if [[ -z "$2" ]]; then
    filename="$(date +"%m-%d-%Y").txt"
  else
    filename="$2"
  fi

  filepath="$dirpath/$filename"
  touch "$filepath"
  $EDITOR "$filepath"
}

list() {
  ls -1 "$@"
}

_find() {
  grep -ri "$@" "$NOTE_DIR"
  grep -rni "$@" "$NOTE_DIR" > "$NOTE_TEMP_PATH"
}

edit() {
  case "$1" in
    last)
      # find the last edited file
      local lastfile=$(find "$NOTE_DIR" -type f -print0 | xargs -0 stat -f "%m %N" | sort -rn | head -1 | cut -f2- -d" ")
      echo "$lastfile"
      $EDITOR "$lastfile"
      return
      ;;
    *)
      if [[ -n "$1" ]]; then
        # unrecognized command
        # TODO(JM): in this case can we execute _find?
        _help edit
        exit 1
      fi
      ;;
  esac

  [ -f "$NOTE_TEMP_PATH" ] && $EDITOR -q "$NOTE_TEMP_PATH" || usage
}

# _help will print the help for the first arg ($1) it receives. It does not exit
# so any call to the func should call exit afterwards with the appropriate exit
# code.
_help() {
  local command="$1"
  header() {
      printf "\nusage: note $command [command]\n\n"
      echo "commands:"
  }

  case "$command" in
    new|n)
      header
      printf "\t%-22s %s\n" "note new" "Create a new note in the \"misc\" dir"
      printf "\t%-22s %s\n" "note new DIR" "Create a new note in a new or existing dir"
      printf "\t%-22s %s\n" "note new DIR name" "Create a new note in a new or existing dir with \"NAME\""
      ;;
    edit|ed|e)
      header
      printf "\t%-22s %s\n" "note edit" "Edit notes located by \"find\""
      printf "\t%-22s %s\n" "note edit last" "Edit most recently edited note"
      ;;
    *)
      usage
      ;;
  esac

  printf "\n\n"
}

_open() {
  $EDITOR "$NOTE_DIR"
}


if [[ $# -ne 1 ]]; then
  exit_arg_err
fi

cd "$NOTE_DIR"

case "$1" in
  edit|ed|e)
    shift ;
    edit "$@"
    ;;
  find|f)
    shift ;
    _find "$@"
    ;;
  list|ls|l)
    shift ;
    list "$@"
    ;;
  new|n)
    shift ;
    new "$@"
    ;;
  open|o)
    _open
    ;;
  help|h)
    shift ;
    _help "$@"
    ;;
  *)
    log_err "unknown arguments:" "$@"
    exit_arg_err
    ;;
esac

exit 0
